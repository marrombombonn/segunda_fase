<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gDoAAAAAAAAAAAAD//Z
</value>
  </data>
</root>